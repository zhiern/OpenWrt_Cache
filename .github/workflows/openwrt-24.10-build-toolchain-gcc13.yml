name: openwrt-24.10-gcc13

on:
  workflow_dispatch:
  # schedule:
    # - cron: 0 17 * * *
  # watch:
  #   types: started
    inputs:
      device:
        description: 'Select the build device'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - 'x86_64'
          - 'rockchip'

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: configs/${{ github.event.inputs.device }}.config
  DIY_SCRIPT: diy-${{ github.event.inputs.device }}.sh
  Toolchain_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-24.04

    steps: 
    - name: Setup variables
      run: |
        sudo timedatectl set-timezone 'Asia/Shanghai'
        git config --global user.name 'actions'
        git config --global user.email 'action@github.com'
        
    - name: Show system
      run: |
        echo -e "\n\e[1;32mCPU:\e[0m"
        echo "$(grep 'model name' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}') ($(grep 'cpu MHz' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}')MHz) x $(grep processor /proc/cpuinfo  | wc -l)"
        echo -e "\n\e[1;32mMemory:\e[0m"
        free -h
        echo -e "\n\e[1;32mStorage:\e[0m"
        df -Th / /mnt
        echo -e "\n\e[1;32mSystem:\e[0m"
        lsb_release -a
        echo -e "\n\e[1;32mKernel:\e[0m"
        uname -a
        echo
        
    - name: Free disk space
      uses: zhiern/actions@free-disk

    - name: Checkout
      uses: actions/checkout@main

    - name: Build System Setup
      uses: zhiern/actions@openwrt-build-setup

    - name: Install LLVM
      uses: zhiern/actions@install-llvm
                
    - name: Clone Source Code
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        curl -o ./openwrt/feeds.conf.default https://script.kejizero.online/Customize/feeds/feeds.conf.default
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV

    - name: Generate Variables
      run: |
        cp $CONFIG_FILE $OPENWRT_PATH/.config
        cd $OPENWRT_PATH
        make defconfig > /dev/null 2>&1
        SOURCE_REPO="$(echo $REPO_URL | awk -F '/' '{print $(NF)}')"
        echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV
        DEVICE_TARGET=$(cat .config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
        echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
        DEVICE_SUBTARGET=$(cat .config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
        echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV
        
    - name: Install Feeds
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Add device support
      if: ${{ github.event.inputs.device == 'rockchip' }}
      run: |
        git clone -b v24.10.1 --single-branch --filter=blob:none https://github.com/immortalwrt/immortalwrt
        cd $OPENWRT_PATH
        rm -rf target/linux/rockchip
        cp -rf ../immortalwrt/target/linux/rockchip target/linux/rockchip
        pushd target/linux/rockchip/patches-6.6/
            curl -Os https://script.kejizero.online/openwrt/patch/rockchip/014-rockchip-add-pwm-fan-controller-for-nanopi-r2s-r4s.patch
            curl -Os https://script.kejizero.online/openwrt/patch/rockchip/702-general-rk3328-dtsi-trb-ent-quirk.patch
            curl -Os https://script.kejizero.online/openwrt/patch/rockchip/703-rk3399-enable-dwc3-xhci-usb-trb-quirk.patch
        popd
        rm -rf package/boot/{rkbin,uboot-rockchip,arm-trusted-firmware-rockchip}
        cp -rf ../immortalwrt/package/boot/uboot-rockchip package/boot/uboot-rockchip
        cp -rf ../immortalwrt/package/boot/arm-trusted-firmware-rockchip package/boot/arm-trusted-firmware-rockchip
        sed -i '/REQUIRE_IMAGE_METADATA/d' target/linux/rockchip/armv8/base-files/lib/upgrade/platform.sh

    - name: Load Custom Configuration
      run: |
        [ ${{ github.event.inputs.ccache }} = 'true' ] && export BUILD_FAST=y
        [ -e files ] && mv files $OPENWRT_PATH/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_PATH/.config
        chmod +x $DIY_SCRIPT
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_SCRIPT

    - name: Download DL Package
      run: |
        cd $OPENWRT_PATH
        make defconfig
        make download -j8
        
    - name: Compile Toolchain
      id: compile
      run: |
        cd $OPENWRT_PATH
        export GITEA_USERTNAME=${{ secrets.GITEA_USERTNAME }}
        export GITEA_PASSWORD=${{ secrets.GITEA_PASSWORD }}
        echo -e "$(nproc) thread compile"
        make -j$cores toolchain/compile || make -j$cores toolchain/compile V=s
        mkdir -p toolchain-cache
        tar -I "zstd -19 -T$(nproc --all)" -cf toolchain-cache/toolchain_${{ github.event.inputs.device }}_gcc-13.tar.zst ./{build_dir,dl,staging_dir,tmp}

    - name: Create release
      uses: ncipollo/release-action@v1.14.0
      with:
        name: openwrt-24.10
        allowUpdates: true
        tag: openwrt-24.10
        commit: openwrt-24.10
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: openwrt/toolchain-cache/*
